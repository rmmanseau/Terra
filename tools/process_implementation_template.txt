#include "class_file.h"

PROCESS_NAME::PROCESS_NAME()
{}

void PROCESS_NAME::registerEntity(Entity& entity)
{
    Node node;
    node.id = entity.getId();

    if (
        (node.component = entity.getComponent<COMPONENT_TYPE>())
       )
    {
        nodes.push_back(node);
    }
}

void PROCESS_NAME::unregisterEntity(EntityId id)
{
    nodes.erase(std::remove_if(nodes.begin(), nodes.end(),
                               [&id](Node& node){ return node.id == id; }),
                nodes.end());
}

void PROCESS_NAME::update()
{
    for (auto node = nodes.begin();
         node != nodes.end(); ++node)
    {        
        // Do stuff here ...
        // node->component->doStuff();
    }
 
    // Do stuff here ...
}
